{"ast":null,"code":"var _jsxFileName = \"/Users/justinasokolova/Desktop/Frontend Dev /Result School/Module 2 - React/Cart/my-cart/src/components/counter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [tags, setTags] = useState([\"tag1\", \"tag2\", \"tag3\"]);\n  const formatCount = () => {\n    return count === 0 ? \"empty\" : count;\n  };\n  const getBadgeClasses = () => {\n    let classes = \"badge m-2 \";\n    classes += count === 0 ? \"bg-warning\" : \"bg-primary\";\n    return classes;\n  };\n  const handleIncrement = () => {\n    setCount(prevState => prevState + 1);\n  };\n  const handleDecrement = () => {\n    setCount(prevState => prevState - 1);\n  };\n  const handleTagChange = () => {\n    setTags([\"tag4\", \"tag5\"]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"tags.map((tag) => \", /*#__PURE__*/_jsxDEV(\"li\", {\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: getBadgeClasses(),\n      children: formatCount()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btm-sm m-2\",\n      onClick: handleIncrement,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary btm-sm m-2\",\n      onClick: handleDecrement,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Counter, \"9e16EhvLT6cVFtpIuY7blZnC4LE=\");\n_c = Counter;\nexport default Counter;\n\n// хук useState() - асинхронный; инструмент для хранения и обновления данных в \"хранилище\"; \n// возвращает кортеж(массив, в кот строгая последовательность элементов): \n// [count, setCount] = count - состояние; setCount - функция, которая обновляет состояние\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","Counter","count","setCount","tags","setTags","formatCount","getBadgeClasses","classes","handleIncrement","prevState","handleDecrement","handleTagChange","tag"],"sources":["/Users/justinasokolova/Desktop/Frontend Dev /Result School/Module 2 - React/Cart/my-cart/src/components/counter.jsx"],"sourcesContent":["import React, {useState} from \"react\"\n\nconst Counter = () => {\n    const [count, setCount] = useState(0);\n    const [tags, setTags] = useState([\"tag1\", \"tag2\", \"tag3\"])\n\n    const formatCount = () => {\n        return count === 0 ? \"empty\" : count;\n    }\n\n    const getBadgeClasses = () => {\n        let classes = \"badge m-2 \";\n        classes += count === 0 ? \"bg-warning\" : \"bg-primary\";\n        return classes;\n    }\n    \n    const handleIncrement = () => {\n        setCount((prevState) => prevState + 1);\n    }\n\n    const handleDecrement = () => {\n        setCount((prevState) => prevState - 1);\n    }\n\n    const handleTagChange = () => {\n        setTags([\"tag4\", \"tag5\"])\n    }\n\n    return (\n        <>\n            tags.map((tag) => {\n                <li>{tag}</li>\n            })\n            <span className={getBadgeClasses()}>{formatCount()}</span>\n            <button className=\"btn btn-primary btm-sm m-2\" onClick={handleIncrement}>+</button>\n            <button className=\"btn btn-primary btm-sm m-2\" onClick={handleDecrement}>-</button>\n        </>\n    )\n};\n\nexport default Counter;\n\n// хук useState() - асинхронный; инструмент для хранения и обновления данных в \"хранилище\"; \n// возвращает кортеж(массив, в кот строгая последовательность элементов): \n// [count, setCount] = count - состояние; setCount - функция, которая обновляет состояние"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAErC,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EAE1D,MAAMM,WAAW,GAAG,MAAM;IACtB,OAAOJ,KAAK,KAAK,CAAC,GAAG,OAAO,GAAGA,KAAK;EACxC,CAAC;EAED,MAAMK,eAAe,GAAG,MAAM;IAC1B,IAAIC,OAAO,GAAG,YAAY;IAC1BA,OAAO,IAAIN,KAAK,KAAK,CAAC,GAAG,YAAY,GAAG,YAAY;IACpD,OAAOM,OAAO;EAClB,CAAC;EAED,MAAMC,eAAe,GAAG,MAAM;IAC1BN,QAAQ,CAAEO,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,eAAe,GAAG,MAAM;IAC1BR,QAAQ,CAAEO,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC1C,CAAC;EAED,MAAME,eAAe,GAAG,MAAM;IAC1BP,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAC7B,CAAC;EAED,oBACI;IAAA,8CAEQ;MAAA,UAAKQ;IAAG;MAAA;MAAA;MAAA;IAAA,QAAM,oBAElB;MAAM,SAAS,EAAEN,eAAe,EAAG;MAAA,UAAED,WAAW;IAAE;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC1D;MAAQ,SAAS,EAAC,4BAA4B;MAAC,OAAO,EAAEG,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eACnF;MAAQ,SAAS,EAAC,4BAA4B;MAAC,OAAO,EAAEE,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA,gBACpF;AAEX,CAAC;AAAC,GApCIV,OAAO;AAAA,KAAPA,OAAO;AAsCb,eAAeA,OAAO;;AAEtB;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}